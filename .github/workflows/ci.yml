# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5
        virtualenvs-create: true
        virtualenvs-in-project: false
        virtualenvs-path: ~/.virtualenvs
        installer-parallel: true

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'corretto'
    - name: Download ActiveMQ
      run: wget https://archive.apache.org/dist/activemq/5.19.0/apache-activemq-5.19.0-bin.tar.gz
    - name: Extract ActiveMQ
      run: tar -xzf apache-activemq-5.19.0-bin.tar.gz
    - name: Start ActiveMQ
      run: apache-activemq-5.19.0/bin/activemq start
    - name: Download and Copy ActiveMQ client all to JARs
      run: |
    - name: Download and Copy ActiveMQ client and dependencies to JARs
      run: |
        mkdir -p jars
        wget https://repo1.maven.org/maven2/org/apache/activemq/activemq-client/5.19.0/activemq-client-5.19.0.jar -O jars/activemq-client-5.19.0.jar
        wget https://repo1.maven.org/maven2/org/apache/activemq/activemq-broker/5.19.0/activemq-broker-5.19.0.jar -O jars/activemq-broker-5.19.0.jar
        wget https://repo1.maven.org/maven2/org/apache/activemq/activemq-openwire-legacy/5.19.0/activemq-openwire-legacy-5.19.0.jar -O jars/activemq-openwire-legacy-5.19.0.jar
        wget https://repo1.maven.org/maven2/org/apache/activemq/activemq-jms-pool/5.19.0/activemq-jms-pool-5.19.0.jar -O jars/activemq-jms-pool-5.19.0.jar
        wget https://repo1.maven.org/maven2/org/apache/activemq/activemq-pool/5.19.0/activemq-pool-5.19.0.jar -O jars/activemq-pool-5.19.0.jar
        wget https://repo1.maven.org/maven2/org/fusesource/hawtbuf/hawtbuf/1.11/hawtbuf-1.11.jar -O jars/hawtbuf-1.11.jar
        wget https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar -O jars/slf4j-api-1.7.36.jar
        wget https://repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar -O jars/commons-lang3-3.12.0.jar
        wget https://repo1.maven.org/maven2/javax/jms/javax.jms-api/2.0.1/javax.jms-api-2.0.1.jar -O jars/javax.jms-api-2.0.1.jar
        
    - name: Install dependencies
      run: |
        poetry install
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Run tests
      run: |
        poetry run invoke tests
    - name: Store Artifact
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-results ${{ matrix.python-version }} # Choose a descriptive name for your artifact
        path: |
          results/*.html
          results/*.xml
    - name: Test Report
      uses: dorny/test-reporter@main
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: xUnit Tests ${{ matrix.python-version }}            # Name of the check run which will be created
        path: results/pytest.xml,results/xunit.xml    # Path to test results
        reporter: java-junit        # Format of test results